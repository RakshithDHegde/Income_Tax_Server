import http.client
import json
import requests
from flask import Flask,jsonify,request
from requests.auth import HTTPBasicAuth

app = Flask(__name__)

@app.route('/', methods=["POST"])
def abc():
  flag = 0
  input_json = request.get_json(force=True)
  print(input_json['House-Rent-Allowance'])
  conn = http.client.HTTPSConnection("user123.atlassian.net")
  url = "https://user123.atlassian.net/rest/api/3/search"

  auth = HTTPBasicAuth("keer2809@gmail.com",
                       "ATATT3xFfGF0o0rfa89fd0HfBuSQEswyYV2SY3HgSJZuT4_xlZb_27gf8JxYc_W3r9FjbupB2AC1B3TGmSS2jSo7tqPXbE08bkCf0If8upFC3T-b_FNV8ZsWz5UkPLPEpJMaKEiXCSmN4rgAsXeJMPqJ4nr-fgSh5Cixy9POXsgRX0e9OSxTg6Y=FA7848C8")

  headers = {
    'Content-Type': 'application/json',
    # 'Authorization': 'Basic a2VlcnRoYW5hZG0uaXMyMEBydmNlLmVkdS5pbjpBVEFUVDN4RmZHRjAwOVZxeVZuSzBCRWhoQ19tWjFpSXFxTG0wZnVtWDhURVR4b2t6VkxoNzZKdmR2NzdfLUVjekU3by1RZkxCU3NTQ2JObmdXOExlaG4yT0k3SFY5MzBKRFBsdDNEMENzb0NaMGhfdUxrNG1lZDhHZjlkSnJIVDg2bVhNRzFfXzVnVVVfRWZCQWhKQWpCWG9NZWU5U1k1ZmdLWnlXNVRjeGg2bmJsUmlIQ1dEdXc9ODAwQzRBNzU=',
    # 'Authorization':'Basic ATCTT3xFfGN01uoD_EDVdb3eniWMz_diHH5hb_eWwgU4CvG063x1oPHs0IDswgYdwDt1gBqu0YnQ87ScB5Irrp2Tn5eWwKxhbJKhd6rFyoS5caSh3THrA5k2nogbFiijy7JlZJqxWW5ieC-ab0hX0S7CcY6YjZpRIEVWEnKpoZUtbPf7rAprI_0=42D4207C',
    'Cookie': 'atlassian.xsrf.token=2ce4f5e8-4fa2-44be-a47e-9a2b5b3c24f0_4e22051a201d1b197a173c602d4d6cbf789df1c4_lin',
    'Authorization': 'Basic a2VlcjI4MDlAZ21haWwuY29tOkFUQVRUM3hGZkdGMG8wcmZhODlmZDBIZkJ1U1FFc3d5WVYyU1kzSGdTSlp1VDRfeGxaYl8yN2dmOEp4WWNfVzNyOUZqYnVwQjJBQzFCM1RHbVNTMmpTbzd0cVBYYkUwOGJrQ2YwSWY4dXBGQzNULWJfRk5WOFpzV3o1VWtQTFBFcEpNYUtFaVhDU21ONHJnQXNYZUpNUHFKNG5yLWZnU2g1Q2l4eTlQT1hzZ1JYMGU5T1N4VGc2WT1GQTc4NDhDOA==',
  }

  query = {
    'jql': '',
    'maxResults': 10000
  }

  flag=0

  if flag==0:
    payload = json.dumps({
  "fields": {
    "project": {
      "key": "IT"
    },
    "summary": "User Financial Records",
    "description": {
      "type": "doc",
      "version": 1,
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": "This is an autogenerated Financial Statement"
            }
          ]
        }
      ]
    },
    "issuetype": {
      "name": "Task"
    },
    "customfield_10036":input_json['Annual-Income'],
    "customfield_10038": input_json['House-Rent-Allowance'],
    "customfield_10039": input_json['Exemptions-80C'],
    "customfield_10040": input_json['Exemptions-MISC'],
    "customfield_10037": input_json["Employee-PF"],
  
  }
})


  conn.request("POST","https://user123.atlassian.net/rest/api/3/issue", payload, headers)
  res = conn.getresponse()
  data = res.read()
  print(data)
  return jsonify(payload)

@app.route('/createissue', methods=["POST"])
def abcd():
  flag = 0
  input_json = request.get_json(force=True)
  conn = http.client.HTTPSConnection("user123.atlassian.net")
  url = "https://user123.atlassian.net/rest/api/3/search"

  auth = HTTPBasicAuth("keer2809@gmail.com",
                       "ATATT3xFfGF0o0rfa89fd0HfBuSQEswyYV2SY3HgSJZuT4_xlZb_27gf8JxYc_W3r9FjbupB2AC1B3TGmSS2jSo7tqPXbE08bkCf0If8upFC3T-b_FNV8ZsWz5UkPLPEpJMaKEiXCSmN4rgAsXeJMPqJ4nr-fgSh5Cixy9POXsgRX0e9OSxTg6Y=FA7848C8")

  headers = {
    'Content-Type': 'application/json',
    # 'Authorization': 'Basic a2VlcnRoYW5hZG0uaXMyMEBydmNlLmVkdS5pbjpBVEFUVDN4RmZHRjAwOVZxeVZuSzBCRWhoQ19tWjFpSXFxTG0wZnVtWDhURVR4b2t6VkxoNzZKdmR2NzdfLUVjekU3by1RZkxCU3NTQ2JObmdXOExlaG4yT0k3SFY5MzBKRFBsdDNEMENzb0NaMGhfdUxrNG1lZDhHZjlkSnJIVDg2bVhNRzFfXzVnVVVfRWZCQWhKQWpCWG9NZWU5U1k1ZmdLWnlXNVRjeGg2bmJsUmlIQ1dEdXc9ODAwQzRBNzU=',
    # 'Authorization':'Basic ATCTT3xFfGN01uoD_EDVdb3eniWMz_diHH5hb_eWwgU4CvG063x1oPHs0IDswgYdwDt1gBqu0YnQ87ScB5Irrp2Tn5eWwKxhbJKhd6rFyoS5caSh3THrA5k2nogbFiijy7JlZJqxWW5ieC-ab0hX0S7CcY6YjZpRIEVWEnKpoZUtbPf7rAprI_0=42D4207C',
    'Cookie': 'atlassian.xsrf.token=2ce4f5e8-4fa2-44be-a47e-9a2b5b3c24f0_4e22051a201d1b197a173c602d4d6cbf789df1c4_lin',
    'Authorization': 'Basic a2VlcjI4MDlAZ21haWwuY29tOkFUQVRUM3hGZkdGMG8wcmZhODlmZDBIZkJ1U1FFc3d5WVYyU1kzSGdTSlp1VDRfeGxaYl8yN2dmOEp4WWNfVzNyOUZqYnVwQjJBQzFCM1RHbVNTMmpTbzd0cVBYYkUwOGJrQ2YwSWY4dXBGQzNULWJfRk5WOFpzV3o1VWtQTFBFcEpNYUtFaVhDU21ONHJnQXNYZUpNUHFKNG5yLWZnU2g1Q2l4eTlQT1hzZ1JYMGU5T1N4VGc2WT1GQTc4NDhDOA==',
  }

  query = {
    'jql': '',
    'maxResults': 10000
  }

  flag=0

  if flag==0:
    payload = json.dumps({
  "fields": {
    "project": {
      "key": "GOVT"
    },
    "summary": "Issue created from User",
    "description": {
      "type": "doc",
      "version": 1,
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": input_json['text']
            }
          ]
        }
      ]
    },
    "issuetype": {
      "name": "Task"
    },
  
  }
})


  conn.request("POST","https://user123.atlassian.net/rest/api/3/issue", payload, headers)
  res = conn.getresponse()
  data = res.read()
  print(data)
  return jsonify(payload)


if __name__ == '__main__':
    app.run(host = '0.0.0.0',port = 5000)